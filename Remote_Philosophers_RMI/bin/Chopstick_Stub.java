// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class Chopstick_Stub
    extends java.rmi.server.RemoteStub
    implements ChopInterf
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_grab_0;
    private static java.lang.reflect.Method $method_isFree_1;
    private static java.lang.reflect.Method $method_release_2;
    
    static {
	try {
	    $method_grab_0 = ChopInterf.class.getMethod("grab", new java.lang.Class[] {});
	    $method_isFree_1 = ChopInterf.class.getMethod("isFree", new java.lang.Class[] {});
	    $method_release_2 = ChopInterf.class.getMethod("release", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public Chopstick_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of grab()
    public void grab()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_grab_0, null, -6425463487875906318L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isFree()
    public boolean isFree()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isFree_1, null, 2545805489081103984L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of release()
    public void release()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_release_2, null, 8576058822482212403L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
